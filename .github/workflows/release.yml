name: Create Release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Get SDK Version
        id: get_version
        run: echo "SDK_VERSION=$(./gradlew -q sdk:printVersion)" >> $GITHUB_ENV
        continue-on-error: false

      - name: Fail if version already released
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version_tag=v${{ env.SDK_VERSION }}
          if gh release view ${version_tag} >/dev/null 2>&1; then
            echo "Release ${version_tag} already exists."
            exit 1
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: v${{ env.SDK_VERSION }}
          tag_name: v${{ env.SDK_VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          make_latest: "true"

  publish:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ github.actor }}
        run: |
          ./gradlew publishReleasePublicationToGitHubPackagesRepository
        continue-on-error: false